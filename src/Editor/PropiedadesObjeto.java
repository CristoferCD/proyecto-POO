package Editor;

import Objetos.*;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.event.KeyEvent;

/**
 * <p>Diálogo que permite modificar las propiedades de un objeto</p>
 * <p>Las propiedades se modifican al preciso momento en que se modifica
 * cualquier valor en la interfaz. En concreto, cuando el elemento en cuestión
 * pierde el foco.</p>
 * @author David Campos Rodríguez <a href="mailto:david.campos@rai.usc.es">david.campos@rai.usc.es</a>
 */
public class PropiedadesObjeto extends javax.swing.JDialog {
    private Objeto obj;
    private final Editor editor;
    /**
     * Creates new form PropiedadesObjeto
     * @param contexto editor donde se está editando el objeto
     * @param obj el objeto editado
     */
    public PropiedadesObjeto(Editor contexto, Objeto obj) {
        this.obj = obj;
        this.editor = contexto;
        if(obj != null)
            initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * Obtiene el objeto
     * @return el objeto que modifica este cuadro de diálogo
     */
    public Objeto getObj() {
        return obj;
    }

    /**
     * Cambia el objeto (no actualiza la UI)
     * @param obj nuevo objeto que va a modificar este cuadro
     */
    public void setObj(Objeto obj) {
        this.obj = obj;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panGeneral = new javax.swing.JPanel();
        panCabecera = new javax.swing.JPanel();
        panNombre = new javax.swing.JPanel();
        lblNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        panDescripcion = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        scpDescripcion = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        panPeso = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtPeso = new javax.swing.JFormattedTextField();
        panVariable = new javax.swing.JPanel();
        panVarArma = new javax.swing.JPanel();
        panDano = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtDano = new javax.swing.JFormattedTextField();
        panRango = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtRango = new javax.swing.JFormattedTextField();
        btnManos = new javax.swing.JToggleButton();
        panVarArmadura = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtDefensa = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        txtVida = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        txtEnergia = new javax.swing.JFormattedTextField();
        panVarPlus = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtPlus = new javax.swing.JFormattedTextField();
        panVarNada = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Propiedades del objeto [" + tipoObjeto(obj) + "]");
        setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        setName("propiedadesObjeto"); // NOI18N
        setResizable(false);

        panGeneral.setLayout(new java.awt.BorderLayout(0, 5));

        panCabecera.setLayout(new java.awt.BorderLayout(5, 5));

        panNombre.setLayout(new java.awt.BorderLayout(5, 5));

        lblNombre.setText("Nombre:");
        panNombre.add(lblNombre, java.awt.BorderLayout.LINE_START);

        txtNombre.setText(obj.getNombre());
        txtNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreFocusLost(evt);
            }
        });
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreKeyPressed(evt);
            }
        });
        panNombre.add(txtNombre, java.awt.BorderLayout.CENTER);

        panCabecera.add(panNombre, java.awt.BorderLayout.PAGE_START);

        panDescripcion.setLayout(new java.awt.BorderLayout(5, 0));

        jLabel1.setText("Decripción:");
        panDescripcion.add(jLabel1, java.awt.BorderLayout.PAGE_START);

        txtDescripcion.setColumns(20);
        txtDescripcion.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        txtDescripcion.setRows(2);
        txtDescripcion.setText(obj.getDescripcion());
        txtDescripcion.setWrapStyleWord(true);
        txtDescripcion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDescripcionFocusLost(evt);
            }
        });
        txtDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDescripcionKeyReleased(evt);
            }
        });
        scpDescripcion.setViewportView(txtDescripcion);

        panDescripcion.add(scpDescripcion, java.awt.BorderLayout.CENTER);

        panCabecera.add(panDescripcion, java.awt.BorderLayout.CENTER);

        panPeso.setLayout(new java.awt.BorderLayout(5, 0));

        jLabel9.setText("Peso:");
        panPeso.add(jLabel9, java.awt.BorderLayout.LINE_START);

        txtPeso.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtPeso.setText(String.valueOf(obj.getPeso()));
        txtPeso.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPesoFocusLost(evt);
            }
        });
        panPeso.add(txtPeso, java.awt.BorderLayout.CENTER);

        panCabecera.add(panPeso, java.awt.BorderLayout.PAGE_END);

        panGeneral.add(panCabecera, java.awt.BorderLayout.PAGE_START);

        panVariable.setLayout(new java.awt.CardLayout());

        panVarArma.setLayout(new java.awt.BorderLayout(5, 5));

        panDano.setLayout(new java.awt.BorderLayout(5, 5));

        jLabel2.setText("Daño:");
        panDano.add(jLabel2, java.awt.BorderLayout.LINE_START);

        txtDano.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtDano.setText(obj instanceof Arma?String.valueOf(((Arma)obj).getDano()):"2");
        txtDano.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDanoFocusLost(evt);
            }
        });
        panDano.add(txtDano, java.awt.BorderLayout.CENTER);

        panVarArma.add(panDano, java.awt.BorderLayout.PAGE_START);

        panRango.setLayout(new java.awt.BorderLayout(5, 5));

        jLabel3.setText("Rango:");
        panRango.add(jLabel3, java.awt.BorderLayout.LINE_START);

        txtRango.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtRango.setText(obj instanceof Arma?String.valueOf(((Arma)obj).getRango()):"2"
        );
        txtRango.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtRangoFocusLost(evt);
            }
        });
        panRango.add(txtRango, java.awt.BorderLayout.CENTER);

        panVarArma.add(panRango, java.awt.BorderLayout.CENTER);

        btnManos.setSelected(obj instanceof Arma?(((Arma)obj).getTipo()==Arma.ARMA_UNA_MANO):false);
        btnManos.setText((obj instanceof Arma)?( ((Arma)obj).getTipo()==Arma.ARMA_UNA_MANO?"Arma a una mano":"Arma a dos manos"):"NO ES ARMA");
        btnManos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManosActionPerformed(evt);
            }
        });
        panVarArma.add(btnManos, java.awt.BorderLayout.PAGE_END);

        panVariable.add(panVarArma, "Arma");

        java.awt.GridBagLayout panVarArmaduraLayout = new java.awt.GridBagLayout();
        panVarArmaduraLayout.columnWeights = new double[] {0.1, 0.9};
        panVarArmaduraLayout.rowWeights = new double[] {0.33, 0.33, 0.33};
        panVarArmadura.setLayout(panVarArmaduraLayout);

        jLabel4.setText("Defensa:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.33;
        panVarArmadura.add(jLabel4, gridBagConstraints);

        txtDefensa.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtDefensa.setText(obj instanceof Armadura?String.valueOf(((Armadura)obj).getDefensa()):"2");
        txtDefensa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDefensaFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.9;
        gridBagConstraints.weighty = 0.33;
        panVarArmadura.add(txtDefensa, gridBagConstraints);

        jLabel5.setText("Boost vida:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panVarArmadura.add(jLabel5, gridBagConstraints);

        txtVida.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtVida.setText(obj instanceof Armadura?String.valueOf(((Armadura)obj).getBoostVida()):"2");
        txtVida.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtVidaFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panVarArmadura.add(txtVida, gridBagConstraints);

        jLabel6.setText("Boost energía:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panVarArmadura.add(jLabel6, gridBagConstraints);

        txtEnergia.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtEnergia.setText(obj instanceof Armadura?String.valueOf(((Armadura)obj).getBoostEnergia()):"-1");
        txtEnergia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEnergiaFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panVarArmadura.add(txtEnergia, gridBagConstraints);

        panVariable.add(panVarArmadura, "Armadura");

        jLabel7.setText("Plus:");
        panVarPlus.add(jLabel7);

        txtPlus.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtPlus.setText(getPlusVal(obj));
        txtPlus.setPreferredSize(new java.awt.Dimension(200, 22));
        txtPlus.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPlusFocusLost(evt);
            }
        });
        txtPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPlusActionPerformed(evt);
            }
        });
        panVarPlus.add(txtPlus);

        panVariable.add(panVarPlus, "Plus");

        panVarNada.setLayout(new java.awt.BorderLayout());

        jLabel8.setBackground(new java.awt.Color(153, 153, 153));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Este objeto no tiene propiedades especiales.");
        jLabel8.setOpaque(true);
        panVarNada.add(jLabel8, java.awt.BorderLayout.CENTER);

        panVariable.add(panVarNada, "Nada");

        panGeneral.add(panVariable, java.awt.BorderLayout.CENTER);
        ((CardLayout)panVariable.getLayout()).show(panVariable, getPanelObjeto());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, 594, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Cuando el cuadro de nombre pierde el foco
    private void txtNombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreFocusLost
        String nombre = editor.obtenerNombreObjeto(txtNombre.getText().replace(" ", "_"), obj);
        obj.setNombre(nombre);
        txtNombre.setText(obj.getNombre());
    }//GEN-LAST:event_txtNombreFocusLost
    // Cuando se suelta una tecla en el cuadro de nombre
    private void txtNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            txtNombreFocusLost(null);
    }//GEN-LAST:event_txtNombreKeyPressed
    // Cuando el cuadro de descripción pierde el foco
    private void txtDescripcionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescripcionFocusLost
        obj.setDescripcion(txtDescripcion.getText());
        txtDescripcion.setBackground(Color.white);
    }//GEN-LAST:event_txtDescripcionFocusLost
    // Cuando se suelta una tecla en el cuadro de descripción
    private void txtDescripcionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionKeyReleased
        if(!txtDescripcion.getText().equals(obj.getDescripcion()))
            txtDescripcion.setBackground(Color.lightGray);
    }//GEN-LAST:event_txtDescripcionKeyReleased
    // Cuando el botón de arma a una mano/arma a dos manos es pulsado
    private void btnManosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManosActionPerformed
        ((Arma)obj).setTipo(btnManos.isSelected()?Arma.ARMA_UNA_MANO:Arma.ARMA_DOS_MANOS);
        btnManos.setText(((Arma)obj).getTipo()==Arma.ARMA_UNA_MANO?"Arma a una mano":"Arma a dos manos");
    }//GEN-LAST:event_btnManosActionPerformed
    // Cuando el cuadro de peso pierde el foco
    private void txtPesoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPesoFocusLost
        obj.setPeso(Double.valueOf(txtPeso.getText()));
        txtPeso.setText(String.valueOf(obj.getPeso()));
    }//GEN-LAST:event_txtPesoFocusLost
    // Cuando el cuadro de daño pierde el foco
    private void txtDanoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDanoFocusLost
        ((Arma)obj).setDano(Integer.valueOf(txtDano.getText()));
        txtDano.setText(String.valueOf(((Arma)obj).getDano()));
    }//GEN-LAST:event_txtDanoFocusLost
    // Cuando el cuadro de rango pierde el foco
    private void txtRangoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRangoFocusLost
        ((Arma)obj).setRango(Integer.valueOf(txtRango.getText()));
        txtRango.setText(String.valueOf(((Arma)obj).getRango()));
    }//GEN-LAST:event_txtRangoFocusLost
    // Cuando el cuadro de defensa pierde el foco
    private void txtDefensaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDefensaFocusLost
        ((Armadura)obj).setDefensa(Integer.valueOf(txtDefensa.getText()));
        txtDefensa.setText(String.valueOf(((Armadura)obj).getDefensa()));
    }//GEN-LAST:event_txtDefensaFocusLost
    // Cuando el cuadro de vida pierde el foco
    private void txtVidaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtVidaFocusLost
        ((Armadura)obj).setBoostVida(Integer.valueOf(txtVida.getText()));
        txtVida.setText(String.valueOf(((Armadura)obj).getBoostVida()));
    }//GEN-LAST:event_txtVidaFocusLost
    // Cuando el cuadro de energía pierde el foco
    private void txtEnergiaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEnergiaFocusLost
        ((Armadura)obj).setBoostEnergia(Integer.valueOf(txtEnergia.getText()));
        txtEnergia.setText(String.valueOf(((Armadura)obj).getBoostEnergia()));
    }//GEN-LAST:event_txtEnergiaFocusLost
    // Cuando el cuadro de plus 
    private void txtPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPlusActionPerformed
        setPlusVal(obj, txtPlus.getText());
        txtPlus.setText(getPlusVal(obj));
    }//GEN-LAST:event_txtPlusActionPerformed
    // Cuando el cuadro de plus pierde el foco
    private void txtPlusFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPlusFocusLost
        txtPlusActionPerformed(null);
    }//GEN-LAST:event_txtPlusFocusLost

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnManos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JPanel panCabecera;
    private javax.swing.JPanel panDano;
    private javax.swing.JPanel panDescripcion;
    private javax.swing.JPanel panGeneral;
    private javax.swing.JPanel panNombre;
    private javax.swing.JPanel panPeso;
    private javax.swing.JPanel panRango;
    private javax.swing.JPanel panVarArma;
    private javax.swing.JPanel panVarArmadura;
    private javax.swing.JPanel panVarNada;
    private javax.swing.JPanel panVarPlus;
    private javax.swing.JPanel panVariable;
    private javax.swing.JScrollPane scpDescripcion;
    private javax.swing.JFormattedTextField txtDano;
    private javax.swing.JFormattedTextField txtDefensa;
    private javax.swing.JTextArea txtDescripcion;
    private javax.swing.JFormattedTextField txtEnergia;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JFormattedTextField txtPeso;
    private javax.swing.JFormattedTextField txtPlus;
    private javax.swing.JFormattedTextField txtRango;
    private javax.swing.JFormattedTextField txtVida;
    // End of variables declaration//GEN-END:variables

    /**
     * Devuelve el nombre del tipo de objeto
     * @param obj objeto del que se desea obtener el tipo
     * @return una cadena de texto agradable al usuario con el nombre del tipo de objeto
     */
    public static String tipoObjeto(Objeto obj) {
        if(obj instanceof Arma)
            return "Arma";
        else if(obj instanceof Armadura)
            return "Armadura";
        else if(obj instanceof Botiquin)
            return "Botiquín";
        else if(obj instanceof Binoculares)
            return "Binoculares";
        else if(obj instanceof Escombros)
            return "Escombros";
        else if(obj instanceof Explosivo)
            return "Explosivo";
        else if(obj instanceof ToritoRojo)
            return "ToritoRojo";
        else
            return "Ni idea";
    }
    //Cadena de texto que identifica el panel adecuado para este objeto
    private String getPanelObjeto() {
        if(obj instanceof Arma)
            return "Arma";
        else if(obj instanceof Armadura)
            return "Armadura";
        else if(obj instanceof Botiquin
                || obj instanceof Binoculares
                || obj instanceof ToritoRojo)
            return "Plus";
        else
            return "Nada";
    }
    //Método que obtiene el valor de plus del objeto (si es de los que tienen un plus)
    private String getPlusVal(Objeto obj) {
        if(obj instanceof Binoculares){
            return String.valueOf(((Binoculares)obj).getPlusRango());
        }else if(obj instanceof Botiquin){
            return String.valueOf(((Botiquin)obj).getPlusVida());
        }else if(obj instanceof ToritoRojo){
            return String.valueOf(((ToritoRojo)obj).getPlusEnergia());
        }else
            return "0";
    }
    //Método que cambia el valor de plus del objeto (si es de los que tienen un plus)
    private void setPlusVal(Objeto obj, String text) {
        if(obj instanceof Binoculares){
            ((Binoculares)obj).setPlusRango(Integer.valueOf(text));
        }else if(obj instanceof Botiquin){
            ((Botiquin)obj).setPlusVida(Integer.valueOf(text));
        }else if(obj instanceof ToritoRojo){
            ((ToritoRojo)obj).setPlusEnergia(Integer.valueOf(text));
        }
    }
}
