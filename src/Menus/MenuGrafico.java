/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Menus;

import Juego.CargadorJuego;
import Juego.CargarJuegoDeFicheros;
import Juego.CargarJuegoPorDefecto;
import Juego.Juego;
import java.io.File;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileView;

/**
 * Menu de inicio, diseñado con el diseñador gráfico de NetBeans
 * @author David Campos Rodríguez <david.campos@rai.usc.es>
 */
public class MenuGrafico extends javax.swing.JFrame implements Menu{
    /**
     * Creates new form MenuGrafico
     */
    public MenuGrafico() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgTipoJugador = new javax.swing.ButtonGroup();
        fchMapa = new javax.swing.JFileChooser(System.getProperty("user.dir"));
        panGeneral = new javax.swing.JPanel();
        panTipoJugador = new javax.swing.JPanel();
        lblTipoJugador = new javax.swing.JLabel();
        rbtTipoJugadorMarine = new javax.swing.JRadioButton();
        rbtTipoJugadorZapador = new javax.swing.JRadioButton();
        rbtFranco = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        javax.swing.JPanel panJuegoPorDefecto = new javax.swing.JPanel();
        cbxJuegoPorDefecto = new javax.swing.JCheckBox();
        jSeparator2 = new javax.swing.JSeparator();
        panElegirMapa = new javax.swing.JPanel();
        lblMapa = new javax.swing.JLabel();
        txtMapa = new javax.swing.JTextField();
        btnMapa = new javax.swing.JButton();
        panNombre = new javax.swing.JPanel();
        lblNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        panSeparacion = new javax.swing.JPanel();
        panAceptar = new javax.swing.JPanel();
        btnIniciar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();

        fchMapa.setDialogTitle("Abrir mapa");
        fchMapa.setFileFilter(new FiltroMapa());
        fchMapa.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
        fchMapa.setFileView(new FileViewMapa());
        fchMapa.setToolTipText("");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Menú de inicio");

        panGeneral.setLayout(new javax.swing.BoxLayout(panGeneral, javax.swing.BoxLayout.Y_AXIS));

        panTipoJugador.setLayout(new javax.swing.BoxLayout(panTipoJugador, javax.swing.BoxLayout.LINE_AXIS));

        lblTipoJugador.setText("Tipo de jugador:");
        lblTipoJugador.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        panTipoJugador.add(lblTipoJugador);
        lblTipoJugador.getAccessibleContext().setAccessibleName("Tipo de jugador");
        lblTipoJugador.getAccessibleContext().setAccessibleDescription("");

        btgTipoJugador.add(rbtTipoJugadorMarine);
        rbtTipoJugadorMarine.setSelected(true);
        rbtTipoJugadorMarine.setText("Marine");
        rbtTipoJugadorMarine.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tipoJugadorCambiado(evt);
            }
        });
        panTipoJugador.add(rbtTipoJugadorMarine);

        btgTipoJugador.add(rbtTipoJugadorZapador);
        rbtTipoJugadorZapador.setText("Zapador");
        rbtTipoJugadorZapador.setToolTipText("");
        rbtTipoJugadorZapador.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tipoJugadorCambiado(evt);
            }
        });
        panTipoJugador.add(rbtTipoJugadorZapador);

        btgTipoJugador.add(rbtFranco);
        rbtFranco.setText("Francotirador");
        rbtFranco.setToolTipText("");
        rbtFranco.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tipoJugadorCambiado(evt);
            }
        });
        panTipoJugador.add(rbtFranco);

        panGeneral.add(panTipoJugador);
        panGeneral.add(jSeparator1);

        panJuegoPorDefecto.setLayout(new java.awt.BorderLayout());

        cbxJuegoPorDefecto.setSelected(true);
        cbxJuegoPorDefecto.setText("Juego por defecto");
        cbxJuegoPorDefecto.setMargin(new java.awt.Insets(2, 20, 4, 10));
        cbxJuegoPorDefecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxJuegoPorDefectoActionPerformed(evt);
            }
        });
        panJuegoPorDefecto.add(cbxJuegoPorDefecto, java.awt.BorderLayout.CENTER);

        panGeneral.add(panJuegoPorDefecto);
        panGeneral.add(jSeparator2);

        panElegirMapa.setVisible(false);
        panElegirMapa.setLayout(new java.awt.BorderLayout());

        lblMapa.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMapa.setText("Carpeta del mapa");
        panElegirMapa.add(lblMapa, java.awt.BorderLayout.PAGE_START);

        txtMapa.setText("No seleccionado");
        txtMapa.setEnabled(false);
        txtMapa.setPreferredSize(new java.awt.Dimension(150, 22));
        panElegirMapa.add(txtMapa, java.awt.BorderLayout.CENTER);
        txtMapa.getAccessibleContext().setAccessibleDescription("");

        btnMapa.setText("Examinar");
        btnMapa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMapaActionPerformed(evt);
            }
        });
        panElegirMapa.add(btnMapa, java.awt.BorderLayout.EAST);

        panGeneral.add(panElegirMapa);

        panNombre.setMinimumSize(new java.awt.Dimension(6, 0));
        panNombre.setLayout(new java.awt.BorderLayout());

        lblNombre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNombre.setText("Nombre");
        panNombre.add(lblNombre, java.awt.BorderLayout.PAGE_START);

        txtNombre.setText("Marine");
        txtNombre.setMaximumSize(new java.awt.Dimension(45, 22));
        panNombre.add(txtNombre, java.awt.BorderLayout.PAGE_END);

        panGeneral.add(panNombre);

        panSeparacion.setMinimumSize(new java.awt.Dimension(0, 20));

        javax.swing.GroupLayout panSeparacionLayout = new javax.swing.GroupLayout(panSeparacion);
        panSeparacion.setLayout(panSeparacionLayout);
        panSeparacionLayout.setHorizontalGroup(
            panSeparacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 546, Short.MAX_VALUE)
        );
        panSeparacionLayout.setVerticalGroup(
            panSeparacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        panGeneral.add(panSeparacion);

        panAceptar.setLayout(new java.awt.BorderLayout());

        btnIniciar.setText("Iniciar partida");
        btnIniciar.setMaximumSize(new java.awt.Dimension(999999999, 999999999));
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });
        panAceptar.add(btnIniciar, java.awt.BorderLayout.CENTER);

        btnSalir.setText("Salir");
        btnSalir.setMaximumSize(new java.awt.Dimension(99999999, 99999999));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        panAceptar.add(btnSalir, java.awt.BorderLayout.PAGE_END);

        panGeneral.add(panAceptar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
        CargadorJuego cargante;
        String tipo = "Marine";
        if(rbtTipoJugadorZapador.isSelected()) tipo = "Zapador";
        if(rbtFranco.isSelected()) tipo = "Francotirador";
        
        if(cbxJuegoPorDefecto.isSelected()){
                cargante = (CargadorJuego) new CargarJuegoPorDefecto(txtNombre.getText(), tipo);
        }else{
                if(!txtMapa.getText().isEmpty())
                    cargante = new CargarJuegoDeFicheros(txtMapa.getText() + "mapa.csv", txtMapa.getText()+"objetos.csv", txtMapa.getText()+"npcs.csv", tipo);
                else
                    cargante = new CargarJuegoDeFicheros(tipo);
        }
        try {
            Juego j = cargante.cargarJuego();
            j.iniciar();
        } catch (Exception ex) {
           JOptionPane.showConfirmDialog(this, "Hubo un errorcillo cargando el juego ^^' : " + ex.getMessage(), "Error cargando", JOptionPane.DEFAULT_OPTION);
        }
    }//GEN-LAST:event_btnIniciarActionPerformed

    private void tipoJugadorCambiado(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tipoJugadorCambiado
        if(txtNombre.getText().equals("Marine") || txtNombre.getText().equals("Francotirador") || txtNombre.getText().equals("Zapador"))
            txtNombre.setText(((javax.swing.JRadioButton)evt.getItem()).getText());
    }//GEN-LAST:event_tipoJugadorCambiado

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnMapaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMapaActionPerformed
        int returnVal = fchMapa.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            txtMapa.setText(fchMapa.getSelectedFile().toURI().getPath());
        } else {
            System.out.println("File access canceled by the user.");
        }
    }//GEN-LAST:event_btnMapaActionPerformed

    private void cbxJuegoPorDefectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxJuegoPorDefectoActionPerformed
        panNombre.setVisible(cbxJuegoPorDefecto.isSelected());
        panElegirMapa.setVisible(!cbxJuegoPorDefecto.isSelected());
    }//GEN-LAST:event_cbxJuegoPorDefectoActionPerformed
    
    @Override
    public void lanzar() {
        setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgTipoJugador;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JButton btnMapa;
    private javax.swing.JButton btnSalir;
    private javax.swing.JCheckBox cbxJuegoPorDefecto;
    private javax.swing.JFileChooser fchMapa;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblMapa;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblTipoJugador;
    private javax.swing.JPanel panAceptar;
    private javax.swing.JPanel panElegirMapa;
    private javax.swing.JPanel panGeneral;
    private javax.swing.JPanel panNombre;
    private javax.swing.JPanel panSeparacion;
    private javax.swing.JPanel panTipoJugador;
    private javax.swing.JRadioButton rbtFranco;
    private javax.swing.JRadioButton rbtTipoJugadorMarine;
    private javax.swing.JRadioButton rbtTipoJugadorZapador;
    private javax.swing.JTextField txtMapa;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables

    private static class FiltroMapa extends FileFilter {
        @Override
        public boolean accept(File f) {
            if(!f.isDirectory()) return false;
            int cuenta = 0;
            //Si el padre era una carpeta de mapa, esta carpeta ya no se muestra.
            if(f.getParentFile().list() != null){
                for(String otroF : f.getParentFile().list())
                    if(otroF.equals("objetos.csv") ||
                       otroF.equals("npcs.csv")    ||
                       otroF.equals("mapa.csv")
                    )
                        cuenta++;
                return cuenta != 3;
            }
            return true;
        }

        @Override
        public String getDescription() {
            return "Carpetas de mapa y demás carpetas.";
        }
    }

    private static class FileViewMapa extends FileView {
        public FileViewMapa() {
            super();
        }

        @Override
        public Icon getIcon(File f) {
            if(f.isDirectory())
            {
                int cuenta = 0;
                if(f.list() != null){
                    for(String otroF : f.list())
                        if(otroF.equals("objetos.csv") ||
                           otroF.equals("npcs.csv")    ||
                           otroF.equals("mapa.csv")
                          )
                            cuenta++;
                if(cuenta == 3)
                    return new ImageIcon("img/ico_map.png");
                }
            }
            return super.getIcon(f);
        }
    }
}